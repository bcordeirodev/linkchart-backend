services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: linkchartapi
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./storage/logs:/var/www/storage/logs
      - ./storage/app:/var/www/storage/app
      - ./.env:/var/www/.env
    environment:
      - CONTAINER_ROLE=app
      - DB_HOST=linkchartdb
      - REDIS_HOST=linkchartredis
      - DB_CONNECTION=pgsql
      - DB_DATABASE=linkchartprod
      - DB_USERNAME=linkchartuser
      - DB_PASSWORD=linkchartpassword123
      - REDIS_CLIENT=phpredis
      - REDIS_PASSWORD=linkchartredis123
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - linkchartnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  database:
    image: postgres:15-alpine
    container_name: linkchartdb
    restart: unless-stopped
    environment:
      POSTGRES_DB: linkchartprod
      POSTGRES_USER: linkchartuser
      POSTGRES_PASSWORD: linkchartpassword123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - linkchartnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U linkchartuser -d linkchartprod"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: linkchartredis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass linkchartredis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - linkchartnet
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s



volumes:
  postgres_data:
  redis_data:

networks:
  linkchartnet:
    driver: bridge
