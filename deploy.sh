#!/bin/bash

# ==============================================
# SCRIPT DE DEPLOY PARA PRODU√á√ÉO - DIGITALOCEAN
# ==============================================

set -e

echo "üöÄ Iniciando deploy para produ√ß√£o..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configura√ß√µes
SERVER_IP="138.197.121.81"
SERVER_USER="root"
PROJECT_PATH="/var/www/linkchartapi"

# Fun√ß√£o para logs coloridos
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Verificar se estamos no diret√≥rio correto
if [ ! -f "docker-compose.prod.yml" ]; then
    log_error "docker-compose.prod.yml n√£o encontrado. Execute este script do diret√≥rio back-end/"
    exit 1
fi

# Verificar se .env.production existe
if [ ! -f ".env.production" ]; then
    log_error ".env.production n√£o encontrado!"
    exit 1
fi

log_info "Fazendo push das altera√ß√µes para o reposit√≥rio..."
git add .
git commit -m "Deploy: $(date '+%Y-%m-%d %H:%M:%S')" || log_warning "Nenhuma altera√ß√£o para commit"
git push origin main

log_info "Conectando ao servidor e executando deploy..."

ssh $SERVER_USER@$SERVER_IP << 'EOF'
    set -e
    
    echo "üìÇ Navegando para o diret√≥rio do projeto..."
    cd /var/www/linkchartapi
    
    echo "üì• Baixando √∫ltimas altera√ß√µes..."
    git pull origin main
    
    echo "üìã Copiando arquivo de produ√ß√£o..."
    cp .env.production .env
    
    echo "üê≥ Parando containers..."
    docker compose -f docker-compose.prod.yml down
    
    echo "üî® Rebuilding e iniciando containers..."
    docker compose -f docker-compose.prod.yml up -d --build
    
    echo "‚è≥ Aguardando containers iniciarem..."
    sleep 30
    
    echo "üóÑÔ∏è Executando migra√ß√µes..."
    docker compose -f docker-compose.prod.yml exec -T app php artisan migrate --force
    
    echo "üßπ Limpando cache..."
    docker compose -f docker-compose.prod.yml exec -T app php artisan config:cache
    docker compose -f docker-compose.prod.yml exec -T app php artisan route:cache
    docker compose -f docker-compose.prod.yml exec -T app php artisan view:cache
    
    echo "üîç Verificando status dos containers..."
    docker compose -f docker-compose.prod.yml ps
    
    echo "üß™ Testando aplica√ß√£o..."
    curl -f http://localhost/up || echo "‚ö†Ô∏è Teste de sa√∫de falhou"
    
    echo "‚úÖ Deploy conclu√≠do!"
    
EOF

log_success "Deploy finalizado! Testando acesso externo..."

# Teste final
sleep 5
if curl -f "http://$SERVER_IP/up" > /dev/null 2>&1; then
    log_success "‚úÖ Aplica√ß√£o est√° respondendo em http://$SERVER_IP"
else
    log_warning "‚ö†Ô∏è Aplica√ß√£o pode n√£o estar respondendo. Verifique os logs no servidor."
fi

echo ""
log_info "üîó Acesse: http://$SERVER_IP"
log_info "üìä Logs: ssh $SERVER_USER@$SERVER_IP 'docker logs linkchartapi'"
echo ""